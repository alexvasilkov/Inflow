public abstract interface class inflow/Connectivity {
	public static final field Companion Linflow/Connectivity$Companion;
	public abstract fun getConnected ()Lkotlinx/coroutines/flow/StateFlow;
}

public final class inflow/Connectivity$Companion {
	public final fun getDefault ()Linflow/Connectivity;
	public final fun setDefault (Linflow/Connectivity;)V
}

public abstract class inflow/DataParam {
}

public final class inflow/DataParam$AutoRefresh : inflow/DataParam {
	public static final field INSTANCE Linflow/DataParam$AutoRefresh;
}

public final class inflow/DataParam$CacheOnly : inflow/DataParam {
	public static final field INSTANCE Linflow/DataParam$CacheOnly;
}

public abstract interface class inflow/Expires {
	public static final field Companion Linflow/Expires$Companion;
	public abstract fun expiresIn (Ljava/lang/Object;)J
}

public final class inflow/Expires$Companion {
	public final fun after (JLkotlin/jvm/functions/Function1;)Linflow/Expires;
	public final fun at (Lkotlin/jvm/functions/Function1;)Linflow/Expires;
	public final fun ifNull ()Linflow/Expires;
	public final fun never ()Linflow/Expires;
}

public abstract interface class inflow/Inflow {
	public abstract fun data (Linflow/DataParam;)Lkotlinx/coroutines/flow/Flow;
	public abstract fun load (Linflow/LoadParam;)Linflow/InflowDeferred;
	public abstract fun state (Linflow/StateParam;)Lkotlinx/coroutines/flow/Flow;
}

public final class inflow/InflowConfig {
	public final fun cacheDispatcher (Lkotlinx/coroutines/CoroutineDispatcher;)V
	public final fun connectivity (Linflow/Connectivity;)V
	public final fun data (Linflow/MemoryCache;Lkotlin/jvm/functions/Function2;)V
	public final fun data (Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)V
	public final fun data (Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function2;)V
	public final fun data (Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function2;)V
	public final fun dataFlow (Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function2;)V
	public final fun expiration (Linflow/Expires;)V
	public final fun invalidation (Ljava/lang/Object;Linflow/Expires;)V
	public final fun keepCacheSubscribedTimeout (J)V
	public final fun loadDispatcher (Lkotlinx/coroutines/CoroutineDispatcher;)V
	public final fun logId (Ljava/lang/String;)V
	public final fun retryTime (J)V
	public final fun scope (Lkotlinx/coroutines/CoroutineScope;)V
}

public abstract interface class inflow/InflowDeferred {
	public abstract fun await (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun join (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class inflow/InflowKt {
	public static final fun cache (Linflow/Inflow;)Lkotlinx/coroutines/flow/Flow;
	public static final fun cached (Linflow/Inflow;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun data (Linflow/Inflow;)Lkotlinx/coroutines/flow/Flow;
	public static final fun emptyInflow ()Linflow/Inflow;
	public static final fun emptyInflow (Ljava/lang/Object;)Linflow/Inflow;
	public static final fun fresh (Linflow/Inflow;JLkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun fresh$default (Linflow/Inflow;JLkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static final fun inflow (Lkotlin/jvm/functions/Function1;)Linflow/Inflow;
	public static final fun refresh (Linflow/Inflow;)Linflow/InflowDeferred;
	public static final fun refreshError (Linflow/Inflow;)Lkotlinx/coroutines/flow/Flow;
	public static final fun refreshForced (Linflow/Inflow;)Linflow/InflowDeferred;
	public static final fun refreshIfExpired (Linflow/Inflow;J)Linflow/InflowDeferred;
	public static synthetic fun refreshIfExpired$default (Linflow/Inflow;JILjava/lang/Object;)Linflow/InflowDeferred;
	public static final fun refreshState (Linflow/Inflow;)Lkotlinx/coroutines/flow/Flow;
	public static final fun refreshing (Linflow/Inflow;)Lkotlinx/coroutines/flow/Flow;
}

public abstract interface class inflow/Inflows {
	public abstract fun clear ()V
	public abstract fun get (Ljava/lang/Object;)Linflow/Inflow;
}

public abstract interface class inflow/InflowsCache {
	public static final field Companion Linflow/InflowsCache$Companion;
	public abstract fun clear ()V
	public abstract fun doOnRemove (Lkotlin/jvm/functions/Function1;)V
	public abstract fun get (Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
}

public final class inflow/InflowsCache$Companion {
	public final fun create (IJ)Linflow/InflowsCache;
	public static synthetic fun create$default (Linflow/InflowsCache$Companion;IJILjava/lang/Object;)Linflow/InflowsCache;
}

public final class inflow/InflowsConfig {
	public final synthetic fun builder (Lkotlin/jvm/functions/Function2;)V
	public final fun cache (Linflow/InflowsCache;)V
	public final fun factory (Lkotlin/jvm/functions/Function1;)V
}

public final class inflow/InflowsKt {
	public static final fun inflows (Lkotlin/jvm/functions/Function1;)Linflow/Inflows;
}

public abstract class inflow/LoadParam {
}

public final class inflow/LoadParam$Refresh : inflow/LoadParam {
	public static final field INSTANCE Linflow/LoadParam$Refresh;
}

public final class inflow/LoadParam$RefreshForced : inflow/LoadParam {
	public static final field INSTANCE Linflow/LoadParam$RefreshForced;
}

public final class inflow/LoadParam$RefreshIfExpired : inflow/LoadParam {
	public final field expiresIn J
	public fun <init> (J)V
}

public abstract interface class inflow/LoadTracker {
	public abstract fun progress (DD)V
}

public abstract interface class inflow/MemoryCache {
	public static final field Companion Linflow/MemoryCache$Companion;
	public abstract fun read ()Lkotlinx/coroutines/flow/Flow;
	public abstract fun write (Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class inflow/MemoryCache$Companion {
	public final fun create (Ljava/lang/Object;)Linflow/MemoryCache;
	public final fun create (Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;)Linflow/MemoryCache;
}

public final class inflow/ParamsInflowConfig {
	public final synthetic fun builder (Lkotlin/jvm/functions/Function2;)V
	public final fun cache (Linflow/InflowsCache;)V
	public final fun dispatcher (Lkotlinx/coroutines/CoroutineDispatcher;)V
	public final fun factory (Lkotlin/jvm/functions/Function1;)V
	public final fun scope (Lkotlinx/coroutines/CoroutineScope;)V
}

public final class inflow/ParamsInflowKt {
	public static final fun toInflow (Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function1;)Linflow/Inflow;
}

public abstract class inflow/State {
}

public abstract class inflow/State$Idle : inflow/State {
}

public final class inflow/State$Idle$Error : inflow/State$Idle {
	public final field throwable Ljava/lang/Throwable;
}

public final class inflow/State$Idle$Initial : inflow/State$Idle {
	public static final field INSTANCE Linflow/State$Idle$Initial;
}

public final class inflow/State$Idle$Success : inflow/State$Idle {
	public static final field INSTANCE Linflow/State$Idle$Success;
}

public abstract class inflow/State$Loading : inflow/State {
}

public final class inflow/State$Loading$Progress : inflow/State$Loading {
	public final field current D
	public final field total D
	public final fun state ()D
}

public final class inflow/State$Loading$Started : inflow/State$Loading {
	public static final field INSTANCE Linflow/State$Loading$Started;
}

public abstract class inflow/StateParam {
}

public final class inflow/StateParam$Refresh : inflow/StateParam {
	public static final field INSTANCE Linflow/StateParam$Refresh;
}

public final class inflow/TransformersKt {
	public static final fun map (Linflow/Inflow;Lkotlin/jvm/functions/Function2;)Linflow/Inflow;
}

public final class inflow/utils/InflowLogger {
	public static final field INSTANCE Linflow/utils/InflowLogger;
	public final fun getLogger ()Lkotlin/jvm/functions/Function2;
	public final fun getVerbose ()Z
	public final fun setLogger (Lkotlin/jvm/functions/Function2;)V
	public final fun setVerbose (Z)V
}

